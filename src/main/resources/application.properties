#ANS 서버 패스.
server.servlet.context-path=/api

#토큰 sercret key.
jwt.auth.secret-key=gemiso

#방송아이콘 이미지 Url.
files.url-key=http://dev-ans.arirang.com/resource/

#gemiso ans interface [SHA-256].
security-Key=6523969673f0d1e3e6fb5f3a4957226428481dadfbce7ba045a67d8186ab0457

#arirang password
password.salt-key=gdigdg23lymfsibf7qv9njkgk

#json 파싱때 필드가 없는 클래스를 Serialize문제 설정
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# 콘솔 창에 출력되는 로깅 메세지를 색으로 구분해서 출력.
spring.output.ansi.enabled=always
# 로그 메세지가 저장되는 로그 디렉터리.
logging.file.path=/data/logs/
# logging.level.{패키지 경로}를 통해 로깅 레벨을 결정할 수 있슴.
logging.level.gil.toy.medihealth=info

#Topic routingKey
topic.routing-key=ans


server.error.include-binding-errors=always
server.error.include-message=always
server.error.include-stacktrace=on_param

#아리랑 개발서버 DB
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/ansdb
#spring.datasource.username=ans
#spring.datasource.password=g3m1n1-ans@
#아리랑 개발서버 DB[로컬]
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://10.100.13.65:5432/ansdb
#spring.datasource.username=ans
#spring.datasource.password=ans
#아리랑 개발서버 DB[ 아리랑 개발서버 ]
spring.datasource.hikari.main.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.main.jdbc-url=jdbc:postgresql://172.20.10.44:5432/ansdb
spring.datasource.hikari.main.username=ans
spring.datasource.hikari.main.password=g3m1n1-ans@
spring.datasource.hikari.main.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.main.hibernate.hbm2ddl.auto=update
#제미소서버 DB [마이그레이션 데이터 확인]
#spring.datasource.hikari.main.driver-class-name=org.postgresql.Driver
#spring.datasource.hikari.main.jdbc-url=jdbc:postgresql://geminisoft.iptime.org:6432/ansdb
#spring.datasource.hikari.main.username=ans
#spring.datasource.hikari.main.password=g3m1n1-ans@
#spring.datasource.hikari.main.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.hikari.main.hibernate.hbm2ddl.auto=none
#Mis DB[ 부서, 사용자 ]
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.hikari.sub.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.hikari.sub.jdbc-url=jdbc:oracle:thin:@172.20.20.70:1527/ORA19
spring.datasource.hikari.sub.username=USER_VI
spring.datasource.hikari.sub.password=user_vi`1qazxc
spring.datasource.hikari.sub.hibernate.dialect=org.hibernate.dialect.Oracle8iDialect
spring.datasource.hikari.sub.hibernate.hbm2ddl.auto=none

#spring.datasource.hikari.bootdb2.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.hikari.bootdb2.jdbc-url=jdbc:oracle:thin:@172.20.20.70:1527/ORA19
#spring.datasource.hikari.bootdb2.username=USER_VI
#spring.datasource.hikari.bootdb2.password=user_vi`1qazxc

# postgresql를 위한 Tomcat DBCP를 사용하기 위한 설정
#spring.postgresql.datasource.type=org.apache.tomcat.jdbc.pool.DataSource

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
